trigger:
  paths:
    exclude:
    - README.md
    - CHANGES.md
    - CONTRIBUTING.md
    # add more exclude rules, e.g. .ci, .dev, .github

pr:
  paths:
    exclude:
    - README.md
    - CHANGES.md
    - CONTRIBUTING.md
    # add more exclude rules, e.g. .ci, .dev, .github

resources:
  containers:
    - container: fmt # for formatting.yaml
      image: pointcloudlibrary/fmt

stages:
  - stage: formatting
    displayName: Formatting
    jobs:
      - template: formatting.yaml

  - stage: diff
    displayName: Code Changes Diff
    jobs:
      - job: codeDiff
        displayName: Code Diff
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
            fetchDepth: 10
          - script: |
              cd $(Build.SourcesDirectory)
              cat .git/config
              echo "*******"
              git log | cat
              echo "*******Source branch name & source directory & pwd*******"
              echo $(Build.SourceBranch), $(Build.SourceBranchName), $(Build.SourcesDirectory), $PWD
              echo "********1********"
              git merge-base $(Build.SourceBranchName) test-CI-features
              echo "********2********"
              git merge-base $(Build.SourceBranch) origin/test-CI-features
              echo "*******"
              git log -n 1 master --pretty=format:%H
              echo "*******"
              echo "##vso[task.setvariable variable=HasCodeChanges;isOutput=true]false"
              git diff $(git merge-base $(Build.SourceBranch) test-CI-features)
              git diff --quiet $(git merge-base $(Build.SourceBranchName) test-CI-features) -- ':(exclude)doc' ':(exclude)*.md' || \
              echo "##vso[task.setvariable variable=HasCodeChanges;isOutput=true]true"
              echo $(git diff HEAD...HEAD~1)
            name: GitResult

  - stage: documentation
    displayName: Goto Documentation
    dependsOn: diff
    condition: and(succeeded(), eq(dependencies.diff.outputs['CodeDiff.GitResult.HasCodeChanges'], 'false'))
    jobs:
      - job: prompt
        displayName: Simple Prompt
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: echo Trigger docs-pipeline.yaml...

  - stage: build
    displayName: Goto Build
    dependsOn: diff
    condition: and(succeeded(), eq(dependencies.diff.outputs['CodeDiff.GitResult.HasCodeChanges'], 'true'))
    jobs:
      - job: prompt
        displayName: Simple Prompt
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: echo Trigger build-pipeline.yaml...
