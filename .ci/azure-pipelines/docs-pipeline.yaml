trigger: none

pr: none

resources:
  pipelines:
    - pipeline: Main-CI
      source: Main
      trigger:
        stages:
        - documentation
    - pipeline: Build-CI
      source: Build
      trigger:
        stages:
        - build_gcc
  containers:
    - container: fmt # for formatting.yaml
      image: pointcloudlibrary/fmt
    - container: doc # for documentation.yaml
      image: pointcloudlibrary/doc
    - container: env1804 # for tutorials.yaml
      image: pointcloudlibrary/env:18.04

stages:
  - stage: documentation
    displayName: Documentation
    jobs:
    - job: documentation
      displayName: Generate Documentation
      pool:
        vmImage: 'Ubuntu 20.04'
      container: doc
      steps:
      - script: |
          echo "Build.ArtifactStagingDirectory " $(Build.ArtifactStagingDirectory)
          echo "Build.BuildId " $(Build.BuildId)
          echo "Build.BuildNumber " $(Build.BuildNumber)
          echo "Build.BuildUri " $(Build.BuildUri)
          echo "Build.BinariesDirectory " $(Build.BinariesDirectory)
          echo "Build.DefinitionName " $(Build.DefinitionName)
          echo "Build.DefinitionVersion " $(Build.DefinitionVersion)
          echo "Build.QueuedBy " $(Build.QueuedBy)
          echo "Build.QueuedById " $(Build.QueuedById)
          echo "Build.Reason " $(Build.Reason)
          echo "Build.Repository.Clean " $(Build.Repository.Clean)
          echo "Build.Repository.LocalPath " $(Build.Repository.LocalPath)
          echo "Build.Repository.ID " $(Build.Repository.ID)
          echo "Build.Repository.Name " $(Build.Repository.Name)
          echo "Build.Repository.Provider " $(Build.Repository.Provider)
          echo "Build.Repository.Tfvc.Workspace " $(Build.Repository.Tfvc.Workspace)
          echo "Build.Repository.Uri " $(Build.Repository.Uri)
          echo "Build.RequestedFor " $(Build.RequestedFor)
          echo "Build.RequestedForEmail " $(Build.RequestedForEmail)
          echo "Build.RequestedForId " $(Build.RequestedForId)
          echo "Build.SourceBranch " $(Build.SourceBranch)
          echo "Build.SourceBranchName " $(Build.SourceBranchName)
          echo "Build.SourcesDirectory " $(Build.SourcesDirectory)
          echo "Build.SourceVersion " $(Build.SourceVersion)
          echo "Build.SourceVersionMessage " $(Build.SourceVersionMessage)
          echo "Build.StagingDirectory " $(Build.StagingDirectory)
          echo "Build.Repository.Git.SubmoduleCheckout " $(Build.Repository.Git.SubmoduleCheckout)
          echo "Build.SourceTfvcShelveset " $(Build.SourceTfvcShelveset)
          echo "Build.TriggeredBy.BuildId " $(Build.TriggeredBy.BuildId)
          echo "Build.TriggeredBy.DefinitionId " $(Build.TriggeredBy.DefinitionId)
          echo "Build.TriggeredBy.DefinitionName " $(Build.TriggeredBy.DefinitionName)
          echo "Build.TriggeredBy.BuildNumber " $(Build.TriggeredBy.BuildNumber)
          echo "Build.TriggeredBy.ProjectID " $(Build.TriggeredBy.ProjectID)
          echo "Common.TestResultsDirectory " $(Common.TestResultsDirectory)

  - stage: tutorials
    displayName: Tutorials
    dependsOn: documentation
    jobs:
      - template: tutorials.yaml
